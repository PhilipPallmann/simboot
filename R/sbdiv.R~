Content-Type: text/enriched
Text-Width: 70

<x-bg-color><param>grey</param>sbdiv</x-bg-color> <x-color><param>dark cyan</param><<-</x-color> <x-color><param>Purple</param>function</x-color>(X, f, theta = c(<x-color><param>VioletRed4</param>"Shannon"</x-color>, <x-color><param>VioletRed4</param>"Simpson"</x-color>), type = c(<x-color><param>VioletRed4</param>"Dunnett"</x-color>, <x-color><param>VioletRed4</param>"Tukey"</x-color>, <x-color><param>VioletRed4</param>"Sequen"</x-color>, <x-color><param>VioletRed4</param>"AVE"</x-color>, <x-color><param>VioletRed4</param>"Changepoint"</x-color>, <x-color><param>VioletRed4</param>"Williams"</x-color>, <x-color><param>VioletRed4</param>"Marcus"</x-color>, <x-color><param>VioletRed4</param>"McDermott"</x-color>, <x-color><param>VioletRed4</param>"UmbrellaWilliams"</x-color>, <x-color><param>VioletRed4</param>"GrandMean"</x-color>), cmat = <x-color><param>ForestGreen</param>NULL</x-color>, method = c(<x-color><param>VioletRed4</param>"WYht"</x-color>, <x-color><param>VioletRed4</param>"tsht"</x-color>, <x-color><param>VioletRed4</param>"rpht"</x-color>, <x-color><param>VioletRed4</param>"asht"</x-color>), conf.level = 0.95, alternative = c(<x-color><param>VioletRed4</param>"two.sided"</x-color>, <x-color><param>VioletRed4</param>"less"</x-color>, <x-color><param>VioletRed4</param>"greater"</x-color>), R = 2000, base = 1,...){
    args <x-color><param>dark cyan</param><<-</x-color> list(...)
    theta <x-color><param>dark cyan</param><<-</x-color> match.arg(theta)
    type <x-color><param>dark cyan</param><<-</x-color> match.arg(type)
    method <x-color><param>dark cyan</param><<-</x-color> match.arg(method)
    alternative <x-color><param>dark cyan</param><<-</x-color> match.arg(alternative)
    n <x-color><param>dark cyan</param><<-</x-color> unlist(lapply(split(x = X, f = f), length))
    <x-color><param>Purple</param>if</x-color> (length(conf.level) != 1) {
      <x-color><param>Purple</param>stop</x-color>(<x-color><param>VioletRed4</param>"argument conf.level should be a single numeric value"</x-color>)
    }
    <x-color><param>Purple</param>if</x-color> (conf.level <<= 0.5 | conf.level >= 1) {
      <x-color><param>Purple</param>stop</x-color>(<x-color><param>VioletRed4</param>"argument conf.level should be a single numeric value between 0.5 and 1"</x-color>)
    }
    <x-color><param>Purple</param>if</x-color> (!is.numeric(conf.level)) {
      <x-color><param>Purple</param>stop</x-color>(<x-color><param>VioletRed4</param>"argument conf.level should be a single numeric value"</x-color>)
  }
    <x-color><param>Purple</param>if</x-color> (!is.data.frame(X)) {
      <x-color><param>Purple</param>stop</x-color>(<x-color><param>VioletRed4</param>"X must be of an object of class 'data.frame'"</x-color>)
    }
    <x-color><param>Purple</param>if</x-color> (!is.factor(f)) {
      f <x-color><param>dark cyan</param><<-</x-color> as.factor(f)
    }
    k <x-color><param>dark cyan</param><<-</x-color> length(levels(f))
    <x-color><param>Purple</param>if</x-color> (k <<= 1) {
      <x-color><param>Purple</param>stop</x-color>(<x-color><param>VioletRed4</param>"The factor variable f should have at least 2 levels to be compared"</x-color>)
    }
    <x-color><param>Purple</param>if</x-color> (is.null(cmat)){
        cmat <x-color><param>dark cyan</param><<-</x-color> contrMat(n = n, type = type, base = base)
      }
    <x-color><param>Purple</param>else</x-color> {
      <x-color><param>Purple</param>if</x-color> (ncol(cmat) != k) {
        <x-color><param>Purple</param>stop</x-color>(<x-color><param>VioletRed4</param>"Number of columns in cmat should be the same as the number of levels in f"</x-color>)
      }
    }
    <x-color><param>Purple</param>switch</x-color>(theta,
           <x-color><param>VioletRed4</param>"Shannon"</x-color> = {
             <x-color><param>Purple</param>switch</x-color>(method,
                    <x-color><param>VioletRed4</param>"WYht"</x-color> = {
                      output <x-color><param>dark cyan</param><<-</x-color> WYht(X = X, f = f, theta = estShannonWY, cmat = cmat, conf.level = conf.level, alternative = alternative, R = R, args = args)
                    },
                    <x-color><param>VioletRed4</param>"tsht"</x-color> = {
                      output <x-color><param>dark cyan</param><<-</x-color> tsht(X = X, f = f, theta = estShannonf, cmat = cmat, conf.level = conf.level, alternative = alternative, R = R, args = args)
                    },
                    <x-color><param>VioletRed4</param>"rpht"</x-color> = {
                      output <x-color><param>dark cyan</param><<-</x-color> rpht(X = X, f = f, theta = estShannonf, cmat = cmat, conf.level = conf.level, alternative = alternative, R = R, args = args)
                    },
                    <x-color><param>VioletRed4</param>"asht"</x-color> = {
                      output <x-color><param>dark cyan</param><<-</x-color> asht(X = X, f = f, theta = estShannonf, cmat = cmat, conf.level = conf.level, alternative = alternative, args = args)
                    }
                    )
           },
           <x-color><param>VioletRed4</param>"Simpson"</x-color> = {
             <x-color><param>Purple</param>switch</x-color>(method,
                    <x-color><param>VioletRed4</param>"WYht"</x-color> = {
                      output <x-color><param>dark cyan</param><<-</x-color> WYht(X = X, f = f, theta = estSimpson, cmat = cmat, conf.level = conf.level, alternative = alternative, R = R, args = args)
                    },
                    <x-color><param>VioletRed4</param>"tsht"</x-color> = {
                      output <x-color><param>dark cyan</param><<-</x-color> tsht(X = X, f = f, theta = estSimpsonf, cmat = cmat, conf.level = conf.level, alternative = alternative, R = R, args = args)
                    },
                    <x-color><param>VioletRed4</param>"rpht"</x-color> = {
                      output <x-color><param>dark cyan</param><<-</x-color> rpht(X = X, f = f, theta = estSimpsonf, cmat = cmat, conf.level = conf.level, alternative = alternative, R = R, args = args)
                    },
                    <x-color><param>VioletRed4</param>"asht"</x-color> = {
                      output <x-color><param>dark cyan</param><<-</x-color> asht(X = X, f = f, theta = estSimpsonf, cmat = cmat, conf.level = conf.level, alternative = alternative, args = args)
                    }
                    )
           }
           )
    <x-color><param>Purple</param>return</x-color>(output)
  }


